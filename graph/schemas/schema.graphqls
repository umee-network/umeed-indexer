# GraphQL schema example
#
# https://gqlgen.com/getting-started/
directive @goTag(
	key: String!
	value: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type ChainInfo {
    lastBlockHeightReceived: Int! @goTag(key: "firestore", value: "lastBlockHeightReceived")
    chainID: String! @goTag(key: "firestore", value: "chainID")
    cosmosMsgs: [CosmosMsgIndexed!]! @goTag(key: "firestore", value: "cosmosMsgs")
}

type CosmosMsgIndexed {
    protoMsgName: String! @goTag(key: "firestore", value: "protoMsgName")
    # ordered list of indexed block height interval, never should have an interpolate of block heights indexed.
    blocksIndexed: [BlockIndexedInterval!]! @goTag(key: "firestore", value: "blocksIndexed")
    # the higher block height it was indexed since 0.
    idxHeighestBlockHeight: Int! @goTag(key: "firestore", value: "idxHeighestBlockHeight")
}

type BlockIndexedInterval {
    idxFromBlockHeight: Int! @goTag(key: "firestore", value: "idxFromBlockHeight")
    idxToBlockHeight: Int! @goTag(key: "firestore", value: "idxToBlockHeight")
}

type IndexedTx {
    txHash: String! @goTag(key: "firestore", value: "txHash")
    protoMsgName: String! @goTag(key: "firestore", value: "protoMsgName")
    blockHeight: Int! @goTag(key: "firestore", value: "blockHeight")
    msgLiquidate: MsgLiquidate @goTag(key: "firestore", value: "msgLiquidate")
}

type MsgLiquidate {
    liquidator: String! @goTag(key: "firestore", value: "liquidator")
    borrower: String! @goTag(key: "firestore", value: "borrower")
    repayment: String! @goTag(key: "firestore", value: "repayment")
    rewardDenom: String! @goTag(key: "firestore", value: "rewardDenom")
}